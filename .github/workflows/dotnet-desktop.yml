name: BuildMain

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]
    
env:
        configuration: Release
        productNamespacePrefix: "ReactiveUI"
        
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
            - os: windows-latest
              buildtype: "windows"
              
    runs-on: ${{ matrix.os }}
    steps:
      - name: Echo build details
        env:
          BUILDTYPE: ${{ matrix.buildtype }}
        run: echo $BUILDTYPE

      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          lfs: true

    # Install the .NET Core workload
      - name: Install .NET Core 5.0
        uses: actions/setup-dotnet@v1.8.1
        with:
          dotnet-version: 5.0.x
          
      - name: Install .NET Core 3.1
        uses: actions/setup-dotnet@v1.8.1
        with:
          dotnet-version: 3.1.x
          
      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2
 
      - name: build windows
        run: msbuild ReactiveUI.Samples.Windows.sln /t:restore,build /m /v:minimal /p:configuration=${{ env.configuration }}

      - name: build android
        run: msbuild ReactiveUI.Samples.Android.sln /t:restore,build /m /v:minimal /p:configuration=${{ env.configuration }}

      - name: build iOS
        run: msbuild ReactiveUI.Samples.ios.sln /t:restore,build /m /v:minimal /p:configuration=${{ env.configuration }}
        
      - name: Execute unit tests windows
        run: dotnet test ReactiveUI.Samples.Windows.sln --no-build --verbosity normal
  
    # Restore each platform
      #- name: NuGet Restore iphone
      #  if: "contains(matrix.buildtype, 'iphone')"
      #  run: dotnet restore ReactiveUI.Samples.ios.sln
             
    # Build each platform
      #- name: build iphone
      #  if: "contains(matrix.buildtype, 'iphone')"
      #  run: msbuild ReactiveUI.Samples.ios.sln /p:Configuration=${{ env.configuration }}
  
    # Execute all unit tests in the solution
      #- name: Execute unit tests iphone
      #  if: "contains(matrix.buildtype, 'iphone')"
      #  run: dotnet test ReactiveUI.Samples.ios.sln --verbosity normal
        


